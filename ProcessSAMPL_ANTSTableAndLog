CREATE PROCEDURE dbo.ProcessSAMPL_ANTSTableAndLog
AS
BEGIN
    SET NOCOUNT ON;
 
    DECLARE @StartTime DATETIME = GETDATE();
    DECLARE @EndTime DATETIME;
    DECLARE @LastID VARCHAR(16);
    DECLARE @ErrorMessage VARCHAR(4000);
    DECLARE @ReferenceNumber CHAR(8);
    DECLARE @Status VARCHAR(50);
    DECLARE @BatchSize INT = 1000;  -- Batch size for processing
    DECLARE @ProcessedCount INT = 0;
 
    -- Get the last processed ID from the log table (if any)
    SELECT TOP 1 @LastID = LastProcessedID
    FROM dbo.ExecutionLogs
    WHERE Status = 'Success'
    ORDER BY LogID DESC;
 
    -- Debugging: Check the LastProcessedID value
    PRINT 'LastProcessedID: ' + ISNULL(@LastID, 'NULL');
 
    -- If no LastProcessedID exists (first time), start from the first unprocessed record
    IF @LastID IS NULL
    BEGIN
        -- Start from the first record in the SAMPL_ANTS table
        SELECT TOP 1 @LastID = AutoGeneratedId
        FROM dbo.SAMPL_ANTS
        WHERE [PROCESSEDFLAG] = 0
        ORDER BY AutoGeneratedId;  -- Starting from the first unprocessed ID
 
        -- Debugging: First time processing, no LastProcessedID, setting to first unprocessed record
        PRINT 'First time processing, starting from AutoGeneratedId: ' + ISNULL(@LastID, 'No records found');
    END
 
    -- Using a CTE to process records in batches
    WITH BatchCTE AS (
        SELECT 
            AutoGeneratedId,
            EntityName,
            [Source],
            Comment1,
            Comment2,
            Comment3,
            ROW_NUMBER() OVER (ORDER BY AutoGeneratedId) AS RowNum
        FROM dbo.SAMPL_ANTS
        WHERE AutoGeneratedId > @LastID AND [PROCESSEDFLAG] = 0
    )
    -- Process the batch
    UPDATE sa
    SET sa.[PROCESSEDFLAG] = 1
    OUTPUT INSERTED.AutoGeneratedId, INSERTED.EntityName, INSERTED.[Source], INSERTED.Comment1, INSERTED.Comment2, INSERTED.Comment3
    INTO dbo.ExecutionLogs (StartTime, EndTime, Status, LastProcessedID, ErrorMessage, ReferenceNumber)
    FROM dbo.SAMPL_ANTS sa
    INNER JOIN BatchCTE bcte ON sa.AutoGeneratedId = bcte.AutoGeneratedId
    WHERE bcte.RowNum <= @BatchSize;  -- Process up to BatchSize records
 
    -- Get the last processed ID from the current batch
    SELECT @LastID = MAX(AutoGeneratedId) FROM BatchCTE WHERE RowNum <= @BatchSize;
 
    -- Insert log for processed records
    INSERT INTO dbo.ExecutionLogs (StartTime, EndTime, Status, LastProcessedID, ErrorMessage, ReferenceNumber)
    VALUES (@StartTime, GETDATE(), 'Success', @LastID, NULL, @ReferenceNumber);
 
    -- If all rows are processed, end the procedure
    SET @ProcessedCount = (SELECT COUNT(*) FROM dbo.SAMPL_ANTS WHERE AutoGeneratedId > @LastID AND [PROCESSEDFLAG] = 0);
    IF @ProcessedCount = 0
    BEGIN
        PRINT 'All records have been processed.';
        RETURN;
    END
END
 
